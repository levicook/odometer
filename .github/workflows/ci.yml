name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Quick CI for fast feedback (native)
  quick-checks:
    name: Quick Checks (Native)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: make ci-quick

  # Complete validation in Docker (matches local environment)
  docker-validation:
    name: Docker Validation (Complete)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Cache Docker layers for faster subsequent builds
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Cache Cargo registry (mounted into container)
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - run: make ci-docker-full
